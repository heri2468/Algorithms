#include <iostream>
#include<bits/stdc++.h>
using namespace std;
int getSum(int key[],int i,int j)
{
    int sum=0;
    for(int x=i;x<=j;x++) sum+=key[x];
    return sum;

}
int mincost(int root[],int key[],int n)
{
    int cost;
    int dp[n][n];
    //diagonal elements if L=1
    for(int i=0;i<n;i++)
        dp[i][i] = key[i];


    for(int l = 2; l <= n; l++){
            for(int i=0; i <= n-l; i++){
                int j = i + l -1;
                dp[i][j] = INT_MAX;
                int sum = getSum(key, i, j);

                for(int k=i; k <= j; k++){
                     int val = sum + (k-1 < i ? 0 : dp[i][k-1]) +
                            (k+1 > j ? 0 : dp[k+1][j]) ;
                     if(val < dp[i][j]){
                         dp[i][j] = val;
                     }
                }
            }
        }
        return dp[0][n-1];
    }


int main()
{
    int n;
    cin>>n;
    int root[n];
    for(int i=0;i<n;i++) cin>>root[i];
    int key[n];
    for(int i=0;i<n;i++) cin>>key[i];
    int cost = mincost(root,key,n);
    cout<<cost<<endl;
    return 0;
}
